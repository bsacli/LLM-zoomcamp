{"text": "It\u2019s quite useful to understand that all types of models in the course are a plain stack of layers where each layer has exactly one input tensor and one output tensor (Sequential model TF page, Sequential class).\nYou can simply start from an \u201cempty\u201d model and add more and more layers in a sequential order.\nThis mode is called \u201cSequential Model API\u201d  (easier)\nIn Alexey\u2019s videos it is implemented as chained calls of different entities (\u201cinputs\u201d,\u201cbase\u201d, \u201cvectors\u201d,  \u201coutputs\u201d) in a more advanced mode \u201cFunctional Model API\u201d.\nMaybe a more complicated way makes sense when you do Transfer Learning and want to separate \u201cBase\u201d model vs. rest, but in the HW you need to recreate the full model from scratch \u21d2 I believe it is easier to work with a sequence of \u201csimilar\u201d layers.\nYou can read more about it in this TF2 tutorial.\nA really useful Sequential model example is shared in the Kaggle\u2019s \u201cBee or Wasp\u201d dataset folder with code: notebook\nAdded by Ivan Brigida\nFresh Run on Neural Nets\nWhile correcting an error on neural net architecture, it is advised to do fresh run by restarting kernel, else the model learns on top of previous runs.\nAdded by Abhijit Chakraborty", "section": "8. Neural Networks and Deep Learning", "question": "Sequential vs. Functional Model Modes in Keras (TF2)", "course": "machine-learning-zoomcamp", "document_id": "3ac604c3"}