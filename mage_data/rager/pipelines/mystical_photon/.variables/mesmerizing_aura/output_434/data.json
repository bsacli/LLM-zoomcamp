{"text": "Docker Commands\n# Create a Docker Image from a base image\nDocker run -it ubuntu bash\n#List docker images\nDocker images list\n#List  Running containers\nDocker ps -a\n#List with full container ids\nDocker ps -a --no-trunc\n#Add onto existing image to create new image\nDocker commit -a <User_Name> -m \"Message\" container_id New_Image_Name\n# Create a Docker Image with an entrypoint from a base image\nDocker run -it --entry_point=bash python:3.11\n#Attach to a stopped container\nDocker start -ai <Container_Name>\n#Attach to a running container\ndocker exec -it <Container_ID> bash\n#copying from host to container\nDocker cp <SRC_PATH/file> <containerid>:<dest_path>\n#copying from container to host\nDocker cp <containerid>:<Srct_path> <Dest Path on host/file>\n#Create an image from a docker file\nDocker build -t <Image_Name> <Location of Dockerfile>\n#DockerFile Options and best practices\nhttps://devopscube.com/build-docker-image/\n#Docker delete all images forcefully\ndocker rmi -f $(docker images -aq)\n#Docker delete all containers forcefully\ndocker rm -f $(docker ps -qa)\n#docker compose creation\nhttps://www.composerize.com/\nGCP Commands\n1.     Create SSH Keys\n2.     Added to the Settings of Compute Engine VM Instance\n3.     SSH-ed into the VM Instance with a config similar to following\nHost my-website.com\nHostName my-website.com\nUser my-user\nIdentityFile ~/.ssh/id_rsa\n4.     Installed Anaconda by installing the sh file through bash <Anaconda.sh>\n5.     Install Docker after\na.     Sudo apt-get update\nb.     Sudo apt-get docker\n6.     To run Docker without SUDO permissions\na.     https://github.com/sindresorhus/guides/blob/main/docker-without-sudo.md\n7.     Google cloud remote copy\na.     gcloud compute scp LOCAL_FILE_PATHVM_NAME:REMOTE_DIR\nInstall GCP Cloud SDK on Docker Machine\nhttps://stackoverflow.com/questions/23247943/trouble-installing-google-cloud-sdk-in-ubuntu\nsudo apt-get install apt-transport-https ca-certificates gnupg && echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\"| sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list&& curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && sudo apt-get update && sudo apt-get install google-cloud-sdk && sudo apt-get install google-cloud-sdk-app-engine-java && sudo apt-get install google-cloud-sdk-app-engine-python && gcloud init\nAnaconda Commands\n#Activate environment\nConda Activate <environment_name>\n#DeActivate environment\nConda DeActivate <environment_name>\n#Start iterm without conda environment\nconda config --set auto_activate_base false\n# Using Conda forge as default (Community driven packaging recipes and solutions)\nhttps://conda-forge.org/docs/user/introduction.html\nconda --version\nconda update conda\nconda config --add channels conda-forge\nconda config --set channel_priority strict\n#Using Libmamba as Solver\nconda install pgcli  --solver=libmamba\nLinux/MAC Commands\nStarting and Stopping Services on Linux\n\u25cf  \tsudo systemctl start postgresql\n\u25cf  \tsudo systemctl stop postgresql\nStarting and Stopping Services on MAC\n\u25cf      launchctl start postgresql\n\u25cf      launchctl stop postgresql\nIdentifying processes listening to a Port across MAC/Linux\nsudo lsof -i -P -n | grep LISTEN\n$ sudo netstat -tulpn | grep LISTEN\n$ sudo ss -tulpn | grep LISTEN\n$ sudo lsof -i:22 ## see a specific port such as 22 ##\n$ sudo nmap -sTU -O IP-address-Here\nInstalling a package on Debian\nsudo apt install <packagename>\nListing all package on Debian\nDpkg -l | grep <packagename>\nUnInstalling a package on Debian\nSudo apt remove <packagename>\nSudo apt autoclean  && sudo apt autoremove\nList all Processes on Debian/Ubuntu\nPs -aux\napt-get update && apt-get install procps\napt-get install iproute2 for ss -tulpn\n#Postgres Install\nsudo sh -c 'echo \"deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'\nwget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -\nsudo apt-get update\nsudo apt-get -y install postgresql\n#Changing Postgresql port to 5432\n- sudo service postgresql stop - sed -e 's/^port.*/port = 5432/' /etc/postgresql/10/main/postgresql.conf > postgresql.conf\n- sudo chown postgres postgresql.conf\n- sudo mv postgresql.conf /etc/postgresql/10/main\n- sudo systemctl restart postgresql", "section": "Triggers in Mage via CLI", "question": "Basic Commands", "course": "data-engineering-zoomcamp", "document_id": "3916f4a9"}