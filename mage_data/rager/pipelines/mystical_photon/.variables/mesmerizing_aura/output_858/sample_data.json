{"text": "Running python register_model.py results in the following error:\nValueError: could not convert string to float: '0 int\\n1   float\\n2     hyperopt_param\\n3       Literal{n_estimators}\\n4       quniform\\n5         Literal{10}\\n6         Literal{50}\\n7         Literal{1}'\nFull Traceback:\nTraceback (most recent call last):\nFile \"/Users/name/Desktop/Programming/DataTalksClub/MLOps-Zoomcamp/2. Experiment tracking and model management/homework/scripts/register_model.py\", line 101, in <module>\nrun(args.data_path, args.top_n)\nFile \"/Users/name/Desktop/Programming/DataTalksClub/MLOps-Zoomcamp/2. Experiment tracking and model management/homework/scripts/register_model.py\", line 67, in run\ntrain_and_log_model(data_path=data_path, params=run.data.params)\nFile \"/Users/name/Desktop/Programming/DataTalksClub/MLOps-Zoomcamp/2. Experiment tracking and model management/homework/scripts/register_model.py\", line 41, in train_and_log_model\nparams = space_eval(SPACE, params)\nFile \"/Users/name/miniconda3/envs/mlops-zoomcamp/lib/python3.9/site-packages/hyperopt/fmin.py\", line 618, in space_eval\nrval = pyll.rec_eval(space, memo=memo)\nFile \"/Users/name/miniconda3/envs/mlops-zoomcamp/lib/python3.9/site-packages/hyperopt/pyll/base.py\", line 902, in rec_eval\nrval = scope._impls[node.name](*args, **kwargs)\nValueError: could not convert string to float: '0 int\\n1   float\\n2     hyperopt_param\\n3       Literal{n_estimators}\\n4       quniform\\n5         Literal{10}\\n6         Literal{50}\\n7         Literal{1}'\nSolution: There are two plausible errors to this. Both are in the hpo.py file where the hyper-parameter tuning is run. The objective function should look like this.\n\n   def objective(params):\n# It's important to set the \"with\" statement and the \"log_params\" function here\n# in order to properly log all the runs and parameters.\nwith mlflow.start_run():\n# Log the parameters\nmlflow.log_params(params)\nrf = RandomForestRegressor(**params)\nrf.fit(X_train, y_train)\ny_pred = rf.predict(X_valid)\n# Calculate and log rmse\nrmse = mean_squared_error(y_valid, y_pred, squared=False)\nmlflow.log_metric('rmse', rmse)\nIf you add the with statement before this function, and just after the following line\nX_valid, y_valid = load_pickle(os.path.join(data_path, \"valid.pkl\"))\nand you log the parameters just after the search_space dictionary is defined, like this\nsearch_space = {....}\n# Log the parameters\nmlflow.log_params(search_space)\nThen there is a risk that the parameters will be logged in group. As a result, the\nparams = space_eval(SPACE, params)\nregister_model.py file will receive the parameters in group, while in fact it expects to receive them one by one. Thus, make sure that the objective function looks as above.\nAdded by Jakob Salomonsson", "section": "Module 2: Experiment tracking", "question": "Could not convert string to float - ValueError", "course": "mlops-zoomcamp", "document_id": "b9adeb39"}