{"text": "Q: \u201cIn lesson 2.8 why is y_pred different from y? After all, we trained X_train to get the weights that when multiplied by X_train should give exactly y, or?\u201d\nA: linear regression is a pretty simple model, it neither can nor should fit 100% (nor any other model, as this would be the sign of overfitting). This picture might illustrate some intuition behind this, imagine X is a single feature:\nAs our model is linear, how would you draw a line to fit all the \"dots\"?\nYou could \"fit\" all the \"dots\" on this pic using something like scipy.optimize.curve_fit (non-linear least squares) if you wanted to, but imagine how it would perform on previously unseen data.\nAdded by Andrii Larkin", "section": "2. Machine Learning for Regression", "question": "Why linear regression doesn\u2019t provide a \u201cperfect\u201d fit?", "course": "machine-learning-zoomcamp", "document_id": "fe3139f6"}