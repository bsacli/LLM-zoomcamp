{"result_id": "e7f838a4eb304f44bdb1a4bd3e627d9a", "data_type": "text/plain", "error": null, "metadata": null, "output": "Processing document for course: llm-faq-v1\n", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "voltaic_crucible", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724229844782", "message_uuid": "29d140fc29244a8682925ae396384fac", "output_manager": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782"}, "pid": "29d140fc29244a8682925ae396384fac", "pid_spawn": null, "source": "voltaic_crucible", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "voltaic_crucible"}, "status": "running", "type": "stdout", "uuid": "voltaic_crucible", "timestamp": 1724229845136, "output_text": "Processing document for course: llm-faq-v1\n"}
{"result_id": "160b2b9b72b2491e99e1e786f2fcd899", "data_type": null, "error": null, "metadata": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782", "block_type": "data_loader", "block_uuid": "voltaic_crucible", "execution_partition": null, "pipeline_uuid": "cosmic_continuum"}, "output": "", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "voltaic_crucible", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724229844782", "message_uuid": "29d140fc29244a8682925ae396384fac", "output_manager": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782"}, "pid": "29d140fc29244a8682925ae396384fac", "pid_spawn": null, "source": "voltaic_crucible", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "voltaic_crucible"}, "status": "success", "type": "output", "uuid": "voltaic_crucible", "timestamp": 1724229846802, "output_text": ""}
{"result_id": "90b8168b804441dea6aa8a0222ceb087", "data_type": "text/plain", "error": null, "metadata": null, "output": "Processing document for course: llm-faq-v1\n", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "voltaic_crucible", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724229844782", "message_uuid": "35d0ac88a5aa4d2fba322b358a0751cd", "output_manager": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782"}, "pid": "35d0ac88a5aa4d2fba322b358a0751cd", "pid_spawn": null, "source": "voltaic_crucible", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "voltaic_crucible"}, "status": "running", "type": "stdout", "uuid": "voltaic_crucible", "timestamp": 1724229846876, "output_text": "Processing document for course: llm-faq-v1\n"}
{"result_id": "cfb28510e39a4fe886360ab50799cff2", "data_type": null, "error": null, "metadata": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782", "block_type": "data_loader", "block_uuid": "voltaic_crucible", "execution_partition": null, "pipeline_uuid": "cosmic_continuum"}, "output": "", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "voltaic_crucible", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724229844782", "message_uuid": "35d0ac88a5aa4d2fba322b358a0751cd", "output_manager": {"namespace": "pipeline/cosmic_continuum", "path": "llm/rager/data_loaders/voltaic_crucible.py", "uuid": "1724229844782"}, "pid": "35d0ac88a5aa4d2fba322b358a0751cd", "pid_spawn": null, "source": "voltaic_crucible", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "voltaic_crucible"}, "status": "success", "type": "output", "uuid": "voltaic_crucible", "timestamp": 1724229848290, "output_text": ""}
