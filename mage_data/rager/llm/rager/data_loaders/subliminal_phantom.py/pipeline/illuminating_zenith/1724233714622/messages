{"result_id": "6de83608ff7b4c3e9c8d237a77ba6c2c", "data_type": null, "error": {"code": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "code_context": ["import requests", "import docx", "from mage_ai.data_preparation.decorators import custom", "from mage_ai.data_preparation.models.block import Block", ""], "code_context_formatted": ["\u001b[35m   2: import requests\u001b[0m", "\u001b[35m   3: import docx\u001b[0m", "\u001b[91m   4: from mage_ai.data_preparation.decorators import custom\u001b[0m", "\u001b[35m   5: from mage_ai.data_preparation.models.block import Block\u001b[0m", "\u001b[35m   6: \u001b[0m"], "error": "No module named 'docx'", "errors": null, "exception": "ModuleNotFoundError: No module named 'docx'", "line_number": 4, "message": "No module named 'docx'", "message_formatted": "No module named 'docx'", "stacktrace": ["Traceback (most recent call last):\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\", line 281, in execute_code_async\n    local_variables = await __modify_and_execute(\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\", line 135, in __modify_and_execute\n    raise error\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\", line 117, in __modify_and_execute\n    res = await res\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/environments/setup_helpers.py\", line 48, in execute\n    await block.execute(\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 1711, in execute\n    await loop.run_in_executor(\n", "  File \"/usr/local/lib/python3.10/concurrent/futures/thread.py\", line 58, in run\n    result = self.fn(*self.args, **self.kwargs)\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 1688, in execute_sync\n    return __execute()\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 1665, in __execute\n    raise err\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 1567, in __execute\n    output = self.execute_block(\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 1912, in execute_block\n    outputs = self._execute_block(\n", "  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\", line 2041, in _execute_block\n    exec(custom_code, results)\n", "  File \"<string>\", line 4, in <module>\n", "ModuleNotFoundError: No module named 'docx'\n"], "stacktrace_formatted": ["\u001b[91mTraceback (most recent call last):\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\"\u001b[0m, \u001b[36mline 281\u001b[0m, \u001b[35min execute_code_async\n    local_variables = await __modify_and_execute(\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\"\u001b[0m, \u001b[36mline 135\u001b[0m, \u001b[35min __modify_and_execute\n    raise error\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/execution.py\"\u001b[0m, \u001b[36mline 117\u001b[0m, \u001b[35min __modify_and_execute\n    res = await res\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/kernels/magic/environments/setup_helpers.py\"\u001b[0m, \u001b[36mline 48\u001b[0m, \u001b[35min execute\n    await block.execute(\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 1711\u001b[0m, \u001b[35min execute\n    await loop.run_in_executor(\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/concurrent/futures/thread.py\"\u001b[0m, \u001b[36mline 58\u001b[0m, \u001b[35min run\n    result = self.fn(*self.args, **self.kwargs)\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 1688\u001b[0m, \u001b[35min execute_sync\n    return __execute()\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 1665\u001b[0m, \u001b[35min __execute\n    raise err\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 1567\u001b[0m, \u001b[35min __execute\n    output = self.execute_block(\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 1912\u001b[0m, \u001b[35min execute_block\n    outputs = self._execute_block(\n\u001b[0m", "\u001b[34m  File \"/usr/local/lib/python3.10/site-packages/mage_ai/data_preparation/models/block/__init__.py\"\u001b[0m, \u001b[36mline 2041\u001b[0m, \u001b[35min _execute_block\n    exec(custom_code, results)\n\u001b[0m", "\u001b[34m  File \"<string>\"\u001b[0m, \u001b[36mline 4\u001b[0m, \u001b[35min <module>\n\u001b[0m", "\u001b[90mModuleNotFoundError: No module named 'docx'\n\u001b[0m", "\u001b[91mNo module named 'docx'\u001b[0m"], "type": "ModuleNotFoundError"}, "metadata": null, "output": null, "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "subliminal_phantom", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724233714622", "message_uuid": "8cbed1c920ed4481b1706f919e57029f", "output_manager": {"namespace": "pipeline/illuminating_zenith", "path": "llm/rager/data_loaders/subliminal_phantom.py", "uuid": "1724233714622"}, "pid": "8cbed1c920ed4481b1706f919e57029f", "pid_spawn": null, "source": "subliminal_phantom", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "subliminal_phantom"}, "status": "error", "type": "status", "uuid": "subliminal_phantom", "timestamp": 1724233714713, "output_text": null}
{"result_id": "f52ff3f77bf14d64a7be28ba1f082271", "data_type": null, "error": null, "metadata": {"namespace": "pipeline/illuminating_zenith", "path": "llm/rager/data_loaders/subliminal_phantom.py", "uuid": "1724233714622", "block_type": "data_loader", "block_uuid": "subliminal_phantom", "execution_partition": null, "pipeline_uuid": "illuminating_zenith"}, "output": "", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "subliminal_phantom", "message": "import io\nimport requests\nimport docx\nfrom mage_ai.data_preparation.decorators import custom\nfrom mage_ai.data_preparation.models.block import Block\n\ndef clean_line(line):\n    line = line.strip()\n    line = line.strip('\\uFEFF')\n    return line\n\ndef read_faq(file_id):\n    url = f'https://docs.google.com/document/d/{file_id}/export?format=docx'\n    \n    response = requests.get(url)\n    response.raise_for_status()\n    \n    with io.BytesIO(response.content) as f_in:\n        doc = docx.Document(f_in)\n\n    questions = []\n\n    question_heading_style = 'heading 2'\n    section_heading_style = 'heading 1'\n    \n    section_title = ''\n    question_title = ''\n    answer_text_so_far = ''\n     \n    for p in doc.paragraphs:\n        style = p.style.name.lower()\n        p_text = clean_line(p.text)\n    \n        if len(p_text) == 0:\n            continue\n    \n        if style == section_heading_style:\n            section_title = p_text\n            continue\n    \n        if style == question_heading_style:\n            answer_text_so_far = answer_text_so_far.strip()\n            if answer_text_so_far != '' and section_title != '' and question_title != '':\n                questions.append({\n                    'text': answer_text_so_far,\n                    'section': section_title,\n                    'question': question_title,\n                })\n                answer_text_so_far = ''\n    \n            question_title = p_text\n            continue\n        \n        answer_text_so_far += '\\n' + p_text\n    \n    answer_text_so_far = answer_text_so_far.strip()\n    if answer_text_so_far != '' and section_title != '' and question_title != '':\n        questions.append({\n            'text': answer_text_so_far,\n            'section': section_title,\n            'question': question_title,\n        })\n\n    return questions\n\n@data_loader\ndef ingest_data(*args, **kwargs):\n    faq_documents = {\n        'llm-faq-v1': '1qZjwHkvP0lXHiE4zdbWyUXSVfmVGzougDD6N37bat3E',\n    }\n\n    documents = []\n\n    for course, file_id in faq_documents.items():\n        print(f\"Processing document for course: {course}\")\n        course_documents = read_faq(file_id)\n        documents.append({'course': course, 'documents': course_documents})\n    \n    # Return the processed documents as the output of this block\n    return documents\n", "message_request_uuid": "1724233714622", "message_uuid": "8cbed1c920ed4481b1706f919e57029f", "output_manager": {"namespace": "pipeline/illuminating_zenith", "path": "llm/rager/data_loaders/subliminal_phantom.py", "uuid": "1724233714622"}, "pid": "8cbed1c920ed4481b1706f919e57029f", "pid_spawn": null, "source": "subliminal_phantom", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "subliminal_phantom"}, "status": "success", "type": "output", "uuid": "subliminal_phantom", "timestamp": 1724233714756, "output_text": ""}
