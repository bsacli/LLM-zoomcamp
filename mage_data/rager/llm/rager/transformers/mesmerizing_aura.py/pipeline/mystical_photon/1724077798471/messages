{"result_id": "0d154b3526194ee1bee389438a2d994b", "data_type": "text/plain", "error": null, "metadata": null, "output": "Documents: 948\n", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "mesmerizing_aura", "message": "import re\nfrom typing import Any, Dict, List\n\n\n@transformer\ndef chunk_documents(data: List[Dict[str, Any]], *args, **kwargs):\n    documents = []\n    \n    for idx, item in enumerate(data):\n        course = item['course']\n        \n        for info in item['documents']:\n            section = info['section']\n            question = info['question']\n            answer = info['text']\n            \n            # Generate a unique document ID\n            document_id = ':'.join([re.sub(r'\\W', '_', part) \n\t            for part in [course, section, question]]).lower()\n            \n            # Format the document string\n            chunk = '\\n'.join([\n                f'course:\\n{course}\\n',\n                f'section:\\n{section}\\n',\n                f'question:\\n{question}\\n',\n                f'answer:\\n{answer}\\n',\n            ])\n            \n            documents.append(dict(\n                chunk=chunk,\n                document=info,\n\t            document_id=document_id,\n            ))\n\n    print(f'Documents:', len(documents))\n            \n    return [documents]", "message_request_uuid": "1724077798471", "message_uuid": "729ea1a5e3484c9a90481e0f5cbca4de", "output_manager": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471"}, "pid": "729ea1a5e3484c9a90481e0f5cbca4de", "pid_spawn": null, "source": "mesmerizing_aura", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "mesmerizing_aura"}, "status": "running", "type": "stdout", "uuid": "mesmerizing_aura", "timestamp": 1724077798590, "output_text": "Documents: 948\n"}
{"result_id": "55c979504bb14c5e9061cd825b327aae", "data_type": null, "error": null, "metadata": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471", "block_type": "transformer", "block_uuid": "mesmerizing_aura", "execution_partition": null, "pipeline_uuid": "mystical_photon"}, "output": "", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "mesmerizing_aura", "message": "import re\nfrom typing import Any, Dict, List\n\n\n@transformer\ndef chunk_documents(data: List[Dict[str, Any]], *args, **kwargs):\n    documents = []\n    \n    for idx, item in enumerate(data):\n        course = item['course']\n        \n        for info in item['documents']:\n            section = info['section']\n            question = info['question']\n            answer = info['text']\n            \n            # Generate a unique document ID\n            document_id = ':'.join([re.sub(r'\\W', '_', part) \n\t            for part in [course, section, question]]).lower()\n            \n            # Format the document string\n            chunk = '\\n'.join([\n                f'course:\\n{course}\\n',\n                f'section:\\n{section}\\n',\n                f'question:\\n{question}\\n',\n                f'answer:\\n{answer}\\n',\n            ])\n            \n            documents.append(dict(\n                chunk=chunk,\n                document=info,\n\t            document_id=document_id,\n            ))\n\n    print(f'Documents:', len(documents))\n            \n    return [documents]", "message_request_uuid": "1724077798471", "message_uuid": "729ea1a5e3484c9a90481e0f5cbca4de", "output_manager": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471"}, "pid": "729ea1a5e3484c9a90481e0f5cbca4de", "pid_spawn": null, "source": "mesmerizing_aura", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "mesmerizing_aura"}, "status": "success", "type": "output", "uuid": "mesmerizing_aura", "timestamp": 1724077798648, "output_text": ""}
{"result_id": "57b2e6e508454c0d97e366b6527e1e31", "data_type": "text/plain", "error": null, "metadata": null, "output": "Documents: 948\n", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "mesmerizing_aura", "message": "import re\nfrom typing import Any, Dict, List\n\n\n@transformer\ndef chunk_documents(data: List[Dict[str, Any]], *args, **kwargs):\n    documents = []\n    \n    for idx, item in enumerate(data):\n        course = item['course']\n        \n        for info in item['documents']:\n            section = info['section']\n            question = info['question']\n            answer = info['text']\n            \n            # Generate a unique document ID\n            document_id = ':'.join([re.sub(r'\\W', '_', part) \n\t            for part in [course, section, question]]).lower()\n            \n            # Format the document string\n            chunk = '\\n'.join([\n                f'course:\\n{course}\\n',\n                f'section:\\n{section}\\n',\n                f'question:\\n{question}\\n',\n                f'answer:\\n{answer}\\n',\n            ])\n            \n            documents.append(dict(\n                chunk=chunk,\n                document=info,\n\t            document_id=document_id,\n            ))\n\n    print(f'Documents:', len(documents))\n            \n    return [documents]", "message_request_uuid": "1724077798471", "message_uuid": "d3988d6dfd74459da8740e6c4536cea1", "output_manager": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471"}, "pid": "d3988d6dfd74459da8740e6c4536cea1", "pid_spawn": null, "source": "mesmerizing_aura", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "mesmerizing_aura"}, "status": "running", "type": "stdout", "uuid": "mesmerizing_aura", "timestamp": 1724077798932, "output_text": "Documents: 948\n"}
{"result_id": "f13a50f5e18549fba360ae1b5083a685", "data_type": null, "error": null, "metadata": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471", "block_type": "transformer", "block_uuid": "mesmerizing_aura", "execution_partition": null, "pipeline_uuid": "mystical_photon"}, "output": "", "process": {"data": [], "exitcode": null, "is_alive": false, "internal_state": "INIT", "kernel_uuid": "mesmerizing_aura", "message": "import re\nfrom typing import Any, Dict, List\n\n\n@transformer\ndef chunk_documents(data: List[Dict[str, Any]], *args, **kwargs):\n    documents = []\n    \n    for idx, item in enumerate(data):\n        course = item['course']\n        \n        for info in item['documents']:\n            section = info['section']\n            question = info['question']\n            answer = info['text']\n            \n            # Generate a unique document ID\n            document_id = ':'.join([re.sub(r'\\W', '_', part) \n\t            for part in [course, section, question]]).lower()\n            \n            # Format the document string\n            chunk = '\\n'.join([\n                f'course:\\n{course}\\n',\n                f'section:\\n{section}\\n',\n                f'question:\\n{question}\\n',\n                f'answer:\\n{answer}\\n',\n            ])\n            \n            documents.append(dict(\n                chunk=chunk,\n                document=info,\n\t            document_id=document_id,\n            ))\n\n    print(f'Documents:', len(documents))\n            \n    return [documents]", "message_request_uuid": "1724077798471", "message_uuid": "d3988d6dfd74459da8740e6c4536cea1", "output_manager": {"namespace": "pipeline/mystical_photon", "path": "llm/rager/transformers/mesmerizing_aura.py", "uuid": "1724077798471"}, "pid": "d3988d6dfd74459da8740e6c4536cea1", "pid_spawn": null, "source": "mesmerizing_aura", "stream": "code_executions", "timestamp": null, "timestamp_end": null, "uuid": "mesmerizing_aura"}, "status": "success", "type": "output", "uuid": "mesmerizing_aura", "timestamp": 1724077798938, "output_text": ""}
